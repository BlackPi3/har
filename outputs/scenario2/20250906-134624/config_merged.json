{
  "batch_size": 64,
  "num_workers": 4,
  "lr": "1e-3",
  "epochs": 100,
  "patience": 10,
  "seed": 0,
  "device": "mps",
  "mmfit_data_dir": "datasets/mm-fit/",
  "sensor_window_length": 300,
  "cluster": false,
  "dtype": "torch.float32",
  "use_simulated_data": false,
  "pose_file": "pose_3d_upsample_normal.npy",
  "acc_file": "sw_l_acc_std.npy",
  "labels_file": "labels.csv",
  "sim_acc_file": "sw_l_sim_acc.npy",
  "TRAIN_W_IDS": [
    "w01",
    "w02",
    "w03",
    "w04",
    "w06",
    "w07",
    "w08",
    "w16",
    "w17",
    "w18",
    "w00",
    "w05"
  ],
  "VAL_W_IDS": [
    "w14",
    "w15",
    "w19",
    "w20"
  ],
  "TEST_W_IDS": [
    "w09",
    "w10",
    "w11",
    "w13"
  ],
  "in_ch": 3,
  "num_joints": 3,
  "ac_fin": 100,
  "ac_num_classes": 11,
  "models": {
    "regressor": {
      "type": "tcn_regressor",
      "params": {
        "input_channels": 3,
        "num_joints": 3,
        "sequence_length": 300,
        "hidden_channels": 32,
        "fc_hidden": 16
      }
    },
    "feature_extractor": {
      "type": "temporal_feature_extractor",
      "params": {
        "input_channels": 3,
        "n_filters": 9,
        "filter_size": 5,
        "n_dense": 100,
        "window_size": 300,
        "drop_prob": "0,2",
        "pool_size": 2
      }
    },
    "classifier": {
      "type": "activity_classifier",
      "params": {
        "f_in": 100,
        "n_classes": 11
      }
    },
    "discriminator": {
      "type": "temporal_discriminator",
      "params": {
        "input_channels": 3,
        "kernel_size": 5,
        "hidden_channels": 64
      }
    }
  },
  "dataset_name": "mmfit",
  "loss_coefficients": {
    "alpha": 1.0,
    "beta": 0.1
  },
  "torch_device": "mps",
  "np_dtype": {
    "__new__": "<callable: __new__>",
    "__repr__": "<callable: __repr__>",
    "__hash__": "<callable: __hash__>",
    "__str__": "<callable: __str__>",
    "__lt__": "<callable: __lt__>",
    "__le__": "<callable: __le__>",
    "__eq__": "<callable: __eq__>",
    "__ne__": "<callable: __ne__>",
    "__gt__": "<callable: __gt__>",
    "__ge__": "<callable: __ge__>",
    "__add__": "<callable: __add__>",
    "__radd__": "<callable: __radd__>",
    "__sub__": "<callable: __sub__>",
    "__rsub__": "<callable: __rsub__>",
    "__mul__": "<callable: __mul__>",
    "__rmul__": "<callable: __rmul__>",
    "__mod__": "<callable: __mod__>",
    "__rmod__": "<callable: __rmod__>",
    "__divmod__": "<callable: __divmod__>",
    "__rdivmod__": "<callable: __rdivmod__>",
    "__pow__": "<callable: __pow__>",
    "__rpow__": "<callable: __rpow__>",
    "__neg__": "<callable: __neg__>",
    "__pos__": "<callable: __pos__>",
    "__abs__": "<callable: __abs__>",
    "__bool__": "<callable: __bool__>",
    "__int__": "<callable: __int__>",
    "__float__": "<callable: __float__>",
    "__floordiv__": "<callable: __floordiv__>",
    "__rfloordiv__": "<callable: __rfloordiv__>",
    "__truediv__": "<callable: __truediv__>",
    "__rtruediv__": "<callable: __rtruediv__>",
    "as_integer_ratio": "<callable: as_integer_ratio>",
    "is_integer": "<callable: is_integer>",
    "__class_getitem__": "<callable: __class_getitem__>",
    "__doc__": "Single-precision floating-point number type, compatible with C ``float``.\n\n    :Character code: ``'f'``\n    :Canonical name: `numpy.single`\n    :Alias on this platform (Darwin arm64): `numpy.float32`: 32-bit-precision floating-point number type: sign bit, 8 bits exponent, 23 bits mantissa."
  }
}