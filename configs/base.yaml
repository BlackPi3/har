batch_size: 64
num_workers: 4
lr: 1e-3
epochs: 100
patience: 10
seed: 0
device: null # runner will auto-choose cuda if available

# Dataset configuration
data_dir: './data/mm-fit/'  # Local path - will be overridden for cluster
cluster: false
use_simulated_data: false

# Data file names
pose_file: 'pose_3d_upsample_normal.npy'
acc_file: 'sw_l_acc_std.npy'
labels_file: 'labels.csv'
sim_acc_file: 'sw_l_sim_acc.npy'

# Train/val/test splits
train_subjects: ['w01', 'w02', 'w03', 'w04', 'w06', 'w07', 'w08', 'w16', 'w17', 'w18', 'w00', 'w05']
val_subjects: ['w14', 'w15', 'w19', 'w20']
test_subjects: ['w09', 'w10', 'w11', 'w13']

models:
    regressor:
        type: tcn_regressor
        input_channels: 3
        num_joints: 3
        sequence_length: 300  # Same as sensor_window_length
        hidden_channels: 32
        fc_hidden: 16
    
    feature_extractor:
        type: temporal_feature_extractor
        input_channels: 3
        n_filters: 9
        filter_size: 5
        n_dense: 100
        window_size: 300  # Same as sensor_window_length
        drop_prob: 0.2  # Fixed: was "0,2" (string)
        pool_size: 2

    classifier:
        type: activity_classifier
        f_in: 100  # Same as models.feature_extractor.n_dense
        n_classes: 11
    
    discriminator:
        type: temporal_discriminator
        input_channels: 3
        kernel_size: 5
        hidden_channels: 64
