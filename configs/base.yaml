batch_size: 64
num_workers: 4
lr: 1e-3
epochs: 100
patience: 10
seed: 0
device: null # runner will auto-choose cuda if available

# MMFit dataset configuration
mmfit_data_dir: '../datasets/mm-fit/'  # Relative to notebooks/
sensor_window_length: 300  # 3 seconds * 100Hz
cluster: false
dtype: float32
use_simulated_data: false
pose_file: 'pose_3d_upsample_normal.npy'
acc_file: 'sw_l_acc_std.npy'
labels_file: 'labels.csv'
sim_acc_file: 'sw_l_sim_acc.npy'

# Train/val/test splits
TRAIN_W_IDS: ['w01', 'w02', 'w03', 'w04', 'w06', 'w07', 'w08', 'w16', 'w17', 'w18', 'w00', 'w05']
VAL_W_IDS: ['w14', 'w15', 'w19', 'w20']
TEST_W_IDS: ['w09', 'w10', 'w11', 'w13']

# Model parameters (for backward compatibility with notebook)
in_ch: 3
num_joints: 3
ac_fin: 100
ac_num_classes: 11

models:
    regressor:
        type: tcn_regressor # model identifier
        params:
            input_channels: 3 # was in_ch
            num_joints: 3
            sequence_length: 100 # was window_length
            hidden_channels: 32
            fc_hidden: 16
    
    feature_extractor:
        type: temporal_feature_extractor
        params:
            input_channels: 3   # was n_channels
            n_filters: 9
            filter_size: 5
            n_dense: 100
            window_size: 300
            drop_prob: 0,2
            pool_size: 2

    classifier:
        type: activity_classifier
        params:
            f_in: 100
            n_classes: 11
    
    discriminator:
        type: temporal_discriminator
        params:
            input_channels: 3
            kernel_size: 5
            hidden_channels: 64
